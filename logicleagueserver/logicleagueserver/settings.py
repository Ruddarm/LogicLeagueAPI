"""
Django settings for logicleagueserver project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
import os
from dotenv import load_dotenv
import dj_database_url
load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

USE_TZ = True
TIME_ZONE = 'Asia/Kolkata'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-b&tid39w@0_0lp$=t7t-$0!%lfi9&%uolcec3=ivp)19#fho&l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ["*"]
# '35.200.235.194','logicleagueapi.onrender.com'
                #  ,'127.0.0.1'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'users',
    'rest_framework_simplejwt',
    'corsheaders',
    'allauth',
    'django_extensions',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'dj_rest_auth.registration',
    'rest_framework.authtoken',
    'challenges',
    'docker',
    'contests',

]

REST_FRAMEWORK={
    'DEFAULT_AUTHENTICATION_CLASSES': [
    'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],

}
JWT_AUTH_COOKIE = 'access_token'  # Cookie name for JWT token
JWT_AUTH_COOKIE_SECURE = False  # Set to True in production with HTTPS
JWT_AUTH_COOKIE_SAMESITE = 'None'  # Allow cross-origin cookie access
JWT_AUTH_COOKIE_HTTPONLY = True  


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'allauth.account.middleware.AccountMiddleware',  
    'logicleagueserver.middleware.PrintRequestHeadersMiddleware',
    
]
CORS_ALLOW_CREDENTIALS = True
CSRF_COOKIE_SECURE = False  # Set to True in production with HTTPS
CSRF_COOKIE_HTTPONLY = True

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "https://logicleague.netlify.app",
    "https://logicleague.xyz",
    "https://www.logicleague.xyz",
    "http://127.0.0.1:3000",

]
CORS_ALLOW_HEADERS = [
    "content-type",
    "authorization",
    "x-csrftoken",
]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",

]


ROOT_URLCONF = 'logicleagueserver.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60*24),  # Short-lived access token
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),     # Long-lived refresh token
    'ROTATE_REFRESH_TOKENS': True,                  # Issue new refresh token when refreshed
    'BLACKLIST_AFTER_ROTATION': True,               # Blacklist old refresh tokens
    'AUTH_HEADER_TYPES': ('Bearer',),
}
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

WSGI_APPLICATION = 'logicleagueserver.wsgi.application'
AUTH_USER_MODEL = 'users.LogicLeagueUser'


# SOCIALACCOUNT_PROVIDERS = {
#     'google': {
#         'APP': {
#             'client_id': "",
#             'secret': "",
#             'key': ''
#         }
#     }
# }

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.getenv('GOOGLE_CLIENT_ID')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET =os.getenv("GOOGLE_CLIENT_SECRET")
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['email', 'profile']


LOGIN_REDIRECT_URL = '/'  # Redirect after successful login
LOGOUT_REDIRECT_URL = '/'



# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        # default="postgresql://ruddarm:PiZaSTcGxRy8GIVHM21b4kUDVxLVimEt@dpg-cv8j6krqf0us73b91tf0-a.oregon-postgres.render.com/logicleaguedatabase"
        # default="postgresql://ruddarm:D05aQySKjpQZKOOwQCIcP8IYJfAgfKdI@dpg-cufql63tq21c73f8vhc0-a.oregon-postgres.render.com/logicleague_zmss"
       default=  "postgresql://logicleaguedatabase_i01h_user:khPxxm4wcmCQEf7zfx6EQYysuqoJnTkg@dpg-cvkm2q0gjchc73ceg640-a.oregon-postgres.render.com/logicleaguedatabase_i01h"
    )
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'logicleague',       
#         'USER': "ruddarm",           # Replace with your database username
#         'PASSWORD': "ruddarmgoogle4234",       # Replace with your database password
#         'HOST': '35.200.181.214',  # Replace with your instance's Public IP address
#         'PORT': '5432',                    # Default PostgreSQL port
#     }
# }



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'


USE_I18N = True


SITE_ID = 1

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


